{"remainingRequest":"/var/www/html/Vue/vue-clone-tandem/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/var/www/html/Vue/vue-clone-tandem/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/Vue/vue-clone-tandem/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/Vue/vue-clone-tandem/src/components/Header/Header.vue?vue&type=template&id=741978ef&scoped=true&","dependencies":[{"path":"/var/www/html/Vue/vue-clone-tandem/src/components/Header/Header.vue","mtime":1575268987438},{"path":"/var/www/html/Vue/vue-clone-tandem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/Vue/vue-clone-tandem/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/var/www/html/Vue/vue-clone-tandem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/Vue/vue-clone-tandem/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}